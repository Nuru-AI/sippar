{
  "name": "sippar-algorand-bridge",
  "version": "1.0.0-alpha",
  "description": "Trustless ICP-Algorand bridge using Chain Fusion technology",
  "keywords": [
    "algorand",
    "internet-computer",
    "icp",
    "chain-fusion",
    "threshold-signatures",
    "defi",
    "bridge",
    "crypto"
  ],
  "homepage": "https://github.com/Nuru-AI/sippar",
  "repository": {
    "type": "git",
    "url": "https://github.com/Nuru-AI/sippar.git"
  },
  "license": "MIT",
  "author": {
    "name": "Nuru AI",
    "email": "contact@nuru.ai",
    "url": "https://nuru.ai"
  },
  "main": "src/index.ts",
  "scripts": {
    "dev": "concurrently \"npm run dev:frontend\" \"npm run dev:backend\" \"npm run dev:canisters\"",
    "dev:frontend": "cd src/frontend && npm run dev",
    "dev:backend": "cd src/backend && npm run dev",
    "dev:canisters": "dfx start --background && dfx deploy --playground",
    "build": "npm run build:frontend && npm run build:backend && npm run build:canisters",
    "build:frontend": "cd src/frontend && npm run build",
    "build:backend": "cd src/backend && npm run build",
    "build:canisters": "dfx build",
    "test": "npm run test:unit && npm run test:integration && npm run test:e2e",
    "test:unit": "jest --testPathPattern=tests/unit",
    "test:integration": "jest --testPathPattern=tests/integration",
    "test:e2e": "playwright test tests/e2e",
    "test:frontend": "jest --testPathPattern=frontend",
    "test:backend": "jest --testPathPattern=backend",
    "test:canister": "jest --testPathPattern=canister",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "lint": "eslint src/ --ext .ts,.tsx",
    "lint:fix": "eslint src/ --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,json,md}\"",
    "format:check": "prettier --check \"src/**/*.{ts,tsx,json,md}\"",
    "type-check": "tsc --noEmit",
    "deploy:staging": "npm run build && scripts/deploy-staging.sh",
    "deploy:production": "npm run build && scripts/deploy-production.sh",
    "canister:deploy": "dfx deploy",
    "canister:upgrade": "dfx canister install --mode upgrade --all",
    "docs:dev": "vitepress dev docs",
    "docs:build": "vitepress build docs",
    "setup": "npm install && npm run setup:subprojects",
    "setup:subprojects": "cd src/frontend && npm install && cd ../backend && npm install",
    "clean": "rm -rf dist/ build/ .dfx/ node_modules/",
    "health": "curl -f https://nuru.network/api/sippar/health || exit 1"
  },
  "dependencies": {
    "@dfinity/agent": "^0.21.4",
    "@dfinity/auth-client": "^0.21.0",
    "@dfinity/candid": "^0.21.4",
    "@dfinity/principal": "^0.21.4",
    "@sippar/ck-algo-sdk": "file:src/sdk/sippar-ck-algo-sdk-0.1.0.tgz",
    "algosdk": "^2.7.0",
    "axios": "^1.6.0",
    "base32": "^0.0.7",
    "js-nacl": "^1.4.0",
    "js-sha512": "^0.9.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-query": "^3.39.0",
    "react-router-dom": "^6.8.0",
    "tailwindcss": "^3.4.1",
    "tweetnacl": "^1.0.3",
    "typescript": "^5.3.0"
  },
  "devDependencies": {
    "@playwright/test": "^1.40.0",
    "@types/node": "^20.10.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "concurrently": "^8.2.0",
    "eslint": "^8.56.0",
    "eslint-plugin-react": "^7.33.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^29.7.0",
    "prettier": "^3.1.0",
    "ts-jest": "^29.1.0",
    "ts-node": "^10.9.0",
    "vitepress": "^1.0.0"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "workspaces": [
    "src/frontend",
    "src/backend"
  ],
  "config": {
    "dfx": {
      "networks": {
        "local": {
          "bind": "127.0.0.1:8000",
          "type": "ephemeral"
        },
        "ic": {
          "providers": [
            "https://ic0.app"
          ],
          "type": "persistent"
        }
      }
    },
    "algorand": {
      "networks": {
        "localnet": "http://localhost:4001",
        "testnet": "https://node.testnet.algoexplorerapi.io",
        "mainnet": "https://node.algoexplorerapi.io"
      }
    }
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "prettier": {
    "semi": true,
    "trailingComma": "es5",
    "singleQuote": true,
    "printWidth": 80,
    "tabWidth": 2
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest",
      "@typescript-eslint/recommended"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": "error",
      "@typescript-eslint/explicit-function-return-type": "warn",
      "react-hooks/exhaustive-deps": "warn"
    }
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "testMatch": [
      "**/tests/**/*.test.ts",
      "**/tests/**/*.test.js",
      "**/tests/**/*.spec.ts",
      "**/tests/**/*.spec.js"
    ],
    "collectCoverageFrom": [
      "src/**/*.{ts,tsx}",
      "!src/**/*.d.ts",
      "!src/**/index.ts"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 80,
        "functions": 80,
        "lines": 80,
        "statements": 80
      }
    }
  }
}
